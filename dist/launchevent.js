function onMessageSendHandler(e){Office.context.mailbox.item.sensitivityLabel.getAsync({asyncContext:e},getLabelCallback)}function getLabelCallback(e){const t=e.asyncContext;let s="";if(e.status===Office.AsyncResultStatus.Failed||void 0===e.value){const e="Failed to get sensitivity label";return console.error(e),void t.completed({allowEvent:!1,errorMessage:e})}s=e.value;var a=!1;getSensitivityLabels().then((e=>{e.sensitivityLabels.forEach((e=>{e.ID==s&&"test"==e.Name&&(a=!0,Office.context.mailbox.item.body.prependAsync("<p>This is a confidential email. Its contents are encrypted</p>",{coercionType:Office.CoercionType.Html},(function(e){if(e.status===Office.AsyncResultStatus.Failed){const e="Failed to insert security text";return console.error(e),void t.completed({allowEvent:!1,errorMessage:e})}t.completed({allowEvent:!0})})))})),a||t.completed({allowEvent:!0})}))}async function getSensitivityLabels(){return new Promise(((e,t)=>{Office.context.sensitivityLabelsCatalog.getIsEnabledAsync((s=>{s.status===Office.AsyncResultStatus.Succeeded&&1==s.value?Office.context.sensitivityLabelsCatalog.getAsync((s=>{if(s.status===Office.AsyncResultStatus.Succeeded){const t=s.value;var a=new Array;t.forEach((e=>{null!=e.children?e.children.forEach((t=>{a.push({Name:e.name.trim()+" - "+t.name.trim(),ID:t.id})})):a.push({Name:e.name.trim(),ID:e.id})})),e({name:"OK",sensitivityLabels:a})}else t({name:"Failed",message:"Action failed with error: "+s.error.message})})):t({name:"Failed",message:"Action failed with error: "+s.error.message})}))}))}Office.context.platform!==Office.PlatformType.PC&&null!=Office.context.platform||Office.actions.associate("onMessageSendHandler",onMessageSendHandler);